version: '3'
networks:
    ds-wordpress-6.1.1-net:
        driver: bridge
services:
  mysql:
    image: mysql:5.7
    container_name: ds-wordpress-6.1.1-mysql
    tty: true
    ports:
      - "4208:3306"
    volumes:
      - "./var/libclea/mysql/:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: materialesyaperu
      MYSQL_DATABASE: wordpress
      MYSQL_USER: materialesya
      MYSQL_PASSWORD: materialesya2024
    networks:
      - ds-wordpress-6.1.1-net

  server:
    image: wordpress:latest
    container_name: ds-wordpress-6.1.1
    ports:
      - "8080:80"
    volumes:
      - "./var/www/html/:/var/www/html"
    environment:
      WORDPRESS_DB_USER: materialesya
      WORDPRESS_DB_PASSWORD: materialesya2024
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_HOST: ds-wordpress-6.1.1-mysql
    depends_on:
      - mysql
    networks:
      - ds-wordpress-6.1.1-net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ds-phpmyadmin
    ports:
      - "4283:80"
    environment:
      PMA_HOST: ds-wordpress-6.1.1-mysql
      MYSQL_ROOT_PASSWORD: materialesyaperu
    depends_on:
      - mysql
    networks:
      - ds-wordpress-6.1.1-net
  
  base: &base
    image: chatwoot/chatwoot:latest
    env_file: .env ## Change this file for customized env variables
    volumes:
      - /data/storage:/app/storage

  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - /data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=chatwoot

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - /data/redis:/data
    ports:
      - '6379:6379'
  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - '5678:5678'
    environment:
      - GENERIC_TIMEZONE=America/Chicago
      - TZ=America/Chicago
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
#  nginxproxymanager:
#    image: 'jc21/nginx-proxy-manager:latest'
#    restart: always
#    ports:
#      - '80:80'
#      - '443:443'
      # Admin Web Port:
#      - '81:81'
#    environment:
#      DB_SQLITE_FILE: "/data/database.sqlite"
#    volumes:
#      - ./data:/data
#      - ./letsencrypt:/etc/letsencrypt